{"version":3,"sources":["logo.svg","features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reduces","selectCars","state","car","Header","useState","burgerStatus","setBurgerStatus","useSelector","Container","src","alt","Menu","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","props","CloseIcon","Section","Wrap","bgImage","backgroundImg","bottom","ItemText","title","description","Buttons","ButtonGroup","LeftButton","leftBtnText","rightBtnText","RightButton","DownArrow","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.309e864c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    cars: [ \"Model S\", \"Model 3\", \"Model X\", \"Model Y\", \"Solar Roof\", \"Solar Panels\" ]\r\n\r\n}\r\n\r\nconst carSlice = createSlice({\r\n    name: \"car\",\r\n    initialState,\r\n    reduces: {}\r\n})\r\n\r\nexport const selectCars = state => state.car.cars \r\n\r\nexport default carSlice.reducer","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { selectCars } from '../features/car/carSlice' ;\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\n\r\nfunction Header() {\r\n    const [burgerStatus, setBurgerStatus] = useState(false);\r\n    const cars = useSelector(selectCars)\r\n    return (       \r\n        <Container>            \r\n            <a>\r\n                <img src=\"./images/logo-tesla.svg\" alt=\"tesla-logo\" />\r\n            </a>\r\n            <Menu>\r\n                {cars && cars.map((car, index)=>(\r\n                    <a key={index} href=\"#\">{car}</a>                    \r\n                ))}     \r\n                \r\n                \r\n            </Menu>\r\n            <RightMenu>\r\n                <a href=\"#\">Shop</a>\r\n                <a href=\"#\">Tesla Account</a>\r\n            <CustomMenu  onClick={()=> setBurgerStatus(true)} >\r\n                <p>Menu</p>\r\n            </CustomMenu>\r\n            </RightMenu>\r\n            <BurgerNav show={burgerStatus}>\r\n                <CloseWrapper>\r\n                <CustomClose  onClick={()=> setBurgerStatus(false)} />\r\n                </CloseWrapper>\r\n                 {cars && cars.map((car, index)=>(\r\n                    <li key={index} ><a href='#'> {car} </a></li>                  \r\n                ))}   \r\n                <li><a href='#'>Existing Inventory</a></li>\r\n                <li><a href='#'>Use Inventory</a></li>\r\n                <li><a href='#'>Trade In</a></li>\r\n                <li><a href='#'>Test Drive</a></li>\r\n                <li><a href='#'>Powerwall</a></li>\r\n                <li><a href='#'>Commercial Energy</a></li>\r\n                <li><a href='#'>Utilities</a></li>\r\n                <li><a href='#'>Charging</a></li>\r\n                <li><a href='#'>Find Us</a></li>\r\n                <li><a href='#'>Support</a></li>\r\n                <li><a href='#'>Investor Relations</a></li>\r\n                <li><a href='#'>Shop</a></li>\r\n                <li><a href='#'>Account</a></li>\r\n                <li><a href='#'>More</a></li>\r\n            </BurgerNav>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Container = styled.div`\r\n    \r\n    min-height: 60px;\r\n    position: fixed;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 40px 0 10px;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;   \r\n    margin-top: -16px;\r\n    \r\n`\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n\r\n a {  \r\n      font-weight: 600;      \r\n      flex-wrap: nowrap;\r\n      font-size: 16px;\r\n      padding: 7px 15px;    \r\n      \r\n  }\r\n  a:hover{\r\n    background-color: rgba(155, 155, 155, .25);  \r\n    backdrop-filter: blur(5px);  \r\n    border-radius: 12px;\r\n  }\r\n  @media (max-width: 988px) {\r\n      display: none;\r\n  }\r\n`\r\n\r\nconst RightMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  a {  font-weight: 600;      \r\n      flex-wrap: nowrap;\r\n      font-size: 16px;\r\n      padding: 7px 15px;  \r\n     margin-right: 10px;\r\n      @media (max-width: 980px) {\r\n      display: none;\r\n  }\r\n    }\r\n    a:hover{\r\n      background: rgba(167, 165, 165, 0.3);      \r\n      border-radius: 12px;\r\n\r\n  }\r\n\r\n \r\n`\r\n\r\nconst CustomMenu = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    p {\r\n         background-color: rgba(155, 155, 155, .25);  \r\n         backdrop-filter: blur(5px);\r\n         padding: 7px 15px;\r\n         color: #000;\r\n         border-radius: 12px;\r\n    }\r\n    \r\n\r\n`\r\nconst BurgerNav = styled.div`  \r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: #fff;\r\n  width: 300px;\r\n  z-index: 16;\r\n  list-style: none;\r\n  padding: 20px;\r\n  display: flex;   \r\n  flex-direction: column;\r\n  text-align: start;\r\n  transform: ${props => props.show ? 'translateX(0)': 'translateX(100%)'};\r\n  transition: transform 0.2s ease-in;\r\n  li {\r\n      padding: 15px 0;\r\n      \r\n      padding: 7px 15px;\r\n\r\n      a {\r\n          font-weight: 600;\r\n      }\r\n  }\r\n   li:hover {\r\n       background-color: rgba(155, 155, 155, .25);  \r\n         backdrop-filter: blur(5px);\r\n         padding: 7px 15px;\r\n         color: #000;\r\n         border-radius: 12px;\r\n\r\n   }\r\n   overflow-y: scroll;\r\n\r\n`\r\n\r\nconst CustomClose = styled(CloseIcon)`\r\n\r\n`\r\nconst CloseWrapper = styled.div`\r\ndisplay: flex;\r\njustify-content: flex-end;\r\ncursor: pointer;\r\n`","import React  from 'react';\r\nimport styled from 'styled-components';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nfunction Section(props) {\r\n    return (\r\n        <Wrap bgImage = {props.backgroundImg}>\r\n            <Fade bottom>\r\n            <ItemText>\r\n                <h1>{ props.title }</h1>\r\n                <p>{ props.description }</p>\r\n            </ItemText>\r\n            </Fade>\r\n            <Buttons>\r\n                <Fade bottom>\r\n            <ButtonGroup>\r\n                <LeftButton>\r\n                   { props.leftBtnText }\r\n                </LeftButton>\r\n                \r\n                { props.rightBtnText && \r\n                     <RightButton>\r\n                   { props.rightBtnText }\r\n                </RightButton>\r\n                }\r\n               \r\n            </ButtonGroup>\r\n            </Fade>\r\n            <DownArrow src=\"/images/down-arrow.svg\">\r\n\r\n            </DownArrow>\r\n            </Buttons>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Section\r\n\r\nconst Wrap = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;   \r\n    background-image: url('./images/model-s.jpg');\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between; \r\n    align-items: center;\r\n    background-image: ${props =>   `url(\"/images/${props.bgImage}\")` };\r\n    \r\n`\r\n\r\nconst ItemText = styled.div`\r\npadding-top: 15vh;\r\ntext-align: center;\r\nz-index: -1;\r\n`\r\nconst ButtonGroup = styled.div`\r\ndisplay: flex;\r\nmargin-bottom: 18px;\r\n@media (max-width: 760px) {\r\n    flex-direction: column;\r\n}\r\n`\r\n\r\nconst LeftButton = styled.div`\r\n    cursor: pointer;\r\n    background-color: rgba(23, 26, 32, 0.8);\r\n    backdrop-filter: blur(5px);\r\n    height: 40px;\r\n    width: 256px;\r\n    color: #fff;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 100px;\r\n    opacity: 0.85;\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    margin: 8px;\r\n\r\n`\r\n\r\nconst RightButton = styled(LeftButton)`\r\nbackground-color: #fff;\r\ncolor: #393c41;\r\nopacity: 0.65;\r\n`\r\nconst DownArrow = styled.img`\r\n    margin-top: 20px;\r\n    height: 40px;\r\n    animation: animateDown infinite 1.5s;\r\n   \r\n`\r\n\r\nconst Buttons = styled.div`\r\n\r\n`","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport Section from './Section'\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n           <Section \r\n            title=\"Model S\"\r\n            description=\"Order Online for Touchless Delivery\"\r\n            backgroundImg=\"model-s.jpg\"\r\n            leftBtnText=\"Custom Order\"\r\n            rightBtnText=\"Existing Inventory\"\r\n           \r\n           />      \r\n            <Section \r\n            title=\"Model Y\"\r\n            description=\"Order Online for Touchless Delivery\"\r\n            backgroundImg=\"model-y.jpg\"\r\n            leftBtnText=\"Custom Order\"\r\n            rightBtnText=\"Existing Inventory\"\r\n           />  \r\n             <Section \r\n            title=\"Model 3\"\r\n            description=\"Order Online for Touchless Delivery\"\r\n            backgroundImg=\"model-3.jpg\"\r\n            leftBtnText=\"Custom Order\"\r\n            rightBtnText=\"Existing Inventory\"\r\n           />  \r\n             <Section \r\n            title=\"Model X\"\r\n            description=\"Order Online for Touchless Delivery\"\r\n            backgroundImg=\"model-x.jpg\"\r\n            leftBtnText=\"Custom Order\"\r\n            rightBtnText=\"Existing Inventory\"\r\n           />  \r\n            <Section \r\n            title=\"Solar Panels\"\r\n            description=\"Lowest Cost Solar Panels in America\"\r\n            backgroundImg=\"solar-panel.jpg\"\r\n            leftBtnText=\"Order Now\"\r\n            rightBtnText=\"Learn More\"\r\n           />  \r\n             <Section \r\n            title=\"Solar Roof\"\r\n            description=\"Produce Clean Energy From Your Roof\"\r\n            backgroundImg=\"solar-roof.jpg\"\r\n            leftBtnText=\"Order Now\"\r\n            rightBtnText=\"Learn More\"\r\n           /> \r\n             <Section \r\n            title=\"Accessories\"\r\n            description=\"\"\r\n            backgroundImg=\"accessories.jpg\"\r\n            leftBtnText=\"Shop Now\"\r\n            \r\n           /> \r\n              \r\n              \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\nconst Container = styled.div`\r\nheight: 100vh;\r\noverflow-x: hidden;\r\n\r\n`","import React from 'react';\nimport logo from './logo.svg';\n\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\nfunction App() {\n  return (\n    <div className=\"App\">  \n    <Header />\n    <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from '../features/car/carSlice'\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}